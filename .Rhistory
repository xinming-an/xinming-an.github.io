Hispanic=ED_HispanicLatinoSpanish,
Income=WK2_IncomeCode,
HighestGrade=ED_highestgrade,
Education=ED_EducationCode,
Race_Black=ED_Black,
Race_White=ED_White,
Race_Asian=ED_Asian,
RaceEth=ED_RaceEthCode) %>%
mutate(Sex=case_match(Sex,1~"Male",2~"Female"),
Marital=case_match(Marital, 1 ~ "Married",
2 ~ "Separated",
3 ~ "Divorced",
4 ~ "Annulled",
5 ~ "Widowed",
6 ~ "Never been married"),
Marital_b=fct_collapse(Marital,Married = "Married",
"No longer married" = c("Separated", "Divorced", "Annulled", "Widowed"),
"Never been married" = "Never been married"),
Race = case_when(Race_Black==1 ~ "Black",
Race_White==1 ~ "White",
Race_Asian==1 ~ "Asian",
.default ="Other"),
Employment=case_match(Employment, 1 ~ "Employed",
2 ~ "Retired",
3 ~ "Homemaker",
4 ~ "Student",
5 ~ "Unemployed, disabled, or other"),
RaceEth = case_match(RaceEth, 1 ~ "Hispanic",
2 ~ "Non-Hispanic white",
3 ~ "Non-Hispanic Black",
4 ~ "Non-Hispanic other"),
Hispanic = case_match(Hispanic, 1 ~ "Hispanic",
0 ~ "Non-Hispanic")
)
base_social_demo_data <- demo_data %>% full_join(base_data,by="PID")
save(base_social_demo_data,
file=paste0(output.data.f.path,"/AURORA_Base_SocialDemo_Data.RData"))
base_data=="-8"|base_data=="Presented, not answered"|base_data=="REFUSED"|base_data=="DON'T KNOW"
library(tidyverse)        # Data management
proj.f.path <- "/Users/xman/Library/CloudStorage/OneDrive-UniversityofNorthCarolinaatChapelHill/AURORA/Data/Survey/"
output.data.f.path <- paste(proj.f.path,"/OutputData",sep="")
aurora.survey.frz4c.path <- "/Users/xman/Library/CloudStorage/OneDrive-UniversityofNorthCarolinaatChapelHill/AURORA/Data/Survey/Freeze_4C/ToBeReleased"
aurora.survey.path <- "/Users/xman/Library/CloudStorage/OneDrive-UniversityofNorthCarolinaatChapelHill/AURORA/Data/Survey/"
load(file=paste0(aurora.survey.frz4c.path,"/frz4c.RData"))
load(file=paste0(aurora.survey.path,"/surveyCleanNonFormat.RData"))
load(file=paste0(aurora.survey.path,"/surveyCleanFormat.RData"))
############# Base
base_var <- c("SiteID","ED1_Event_BroadClass")
event_var <- c("ED_ChanceofDying", "ED_SpeedLimit")
#
recover_var <- c("ED_RecoverEmotionally","ED_RecoverEmotUnits","ED_RecoverPhysically",
"ED_RecoverPhysUnits")
tb_var <- c("ED_TB_Amnesia","ED_TB_HitHead","ED_TB_HowLngSleepyConf",
"ED_TB_HowLongKnockedOut","ED_TB_HowMuchDontRecall",
"ED_TB_KnockedOut","ED_TB_SleepyConfused")
# base_data_t<- allSurveyData %>%
#   select(PID,all_of(base_var),all_of(event_var),all_of(recover_var),all_of(tb_var))
# expected recovery was excluded because the unit are different for different participant
base_data_t<- allSurveyData %>%
select(PID,all_of(base_var),all_of(event_var),all_of(tb_var))
injury_data<- data_frz4c  %>%
select(PID,ISS,ISS_Cat,ED_IC_Injury,ED_VehicleDamage_cat,
ED_IC_Injury,ED_HtHdChgMS,MAIS,)
base_data <- base_data_t %>%
full_join(injury_data,by="PID") %>%
mutate(ED_SpeedLimit=as.numeric(ED_SpeedLimit)) %>%
mutate(ED_SpeedLimit=case_when(ED_SpeedLimit<0 ~ NA))
#base_data[base_data %in% c("-8","Presented, not answered","REFUSED","DON'T KNOW")] <- NA
base_data[base_data=="-8"|base_data=="Presented, not answered"|base_data=="REFUSED"|base_data=="DON'T KNOW"] <- NA
base_data[base_data=="-8"] <- NA
base_data <- base_data %>%
# mutate(ED_TB_Amnesia = case_match(ED_TB_Amnesia,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                   "Yes" ~ "Yes",
#                                   "No" ~ "No")) %>%
# mutate(ED_TB_HitHead = case_match(ED_TB_HitHead,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                   "Yes" ~ "Yes",
#                                   "No" ~ "No")) %>%
# mutate(ED_TB_HowLngSleepyConf = case_match(ED_TB_HowLngSleepyConf,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                            "Just a few seconds" ~ "Just a few seconds",
#                                            "Less than a minute" ~ "Less than a minute",
#                                            "One minute or more" ~ "One minute or more")) %>%
# mutate(ED_TB_HowLongKnockedOut = case_match(ED_TB_HowLongKnockedOut,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                             "Just a few seconds" ~ "Just a few seconds",
#                                             "Less than a minute" ~ "Less than a minute",
#                                             "One minute or more" ~ "One minute or more")) %>%
# mutate(ED_TB_HowMuchDontRecall = case_match(ED_TB_HowMuchDontRecall,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                             "Just a few seconds" ~ "Just a few seconds",
#                                             "Less than a minute" ~ "Less than a minute",
#                                             "One minute or more" ~ "One minute or more")) %>%
# mutate(ED_TB_KnockedOut = case_match(ED_TB_KnockedOut,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                      "Yes" ~ "Yes",
#                                      "No" ~ "No")) %>%
# mutate(ED_TB_SleepyConfused = case_match(ED_TB_SleepyConfused,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                          "Yes" ~ "Yes",
#                                          "No" ~ "No")) %>%
mutate(ISS_Cat = as.factor(ISS_Cat),
ED_IC_Injury = case_match(ED_IC_Injury, 1 ~ "Yes",
0 ~ "No"),
ED_VehicleDamage_cat = as.factor(ED_VehicleDamage_cat),
ED_HtHdChgMS = as.factor(ED_HtHdChgMS),)
##### social demo
demo_var <- c("ED_Age","ED_GenderBirthCert","ED_highestgrade","ED_RaceEthCode","ED_Black","ED_White",
"ED_HISPANICLATINOSPANISHF","ED_Marital","WK2_EmploymentCode","WK2_IncomeCode")
temp_data <- data_frz4c %>%
select(PID,ED_Age,ED_GenderBirthCert,BMI,ADI_NatRank,ADI_StateRank,
ED_highestgrade,ED_RaceEthCode,ED_Marital,WK2_EmploymentCode)
temp2_data<- survey.data.clean.nonformat %>%
select(PID,ED_Black,ED_White,ED_Asian,ED_HispanicLatinoSpanish,WK2_IncomeCode,ED_EducationCode)
demo_data_raw <- temp_data %>% full_join(temp2_data,by="PID")
demo_data <- demo_data_raw %>%
rename(Age=ED_Age,Sex=ED_GenderBirthCert,
Employment=WK2_EmploymentCode,
Marital=ED_Marital,
Hispanic=ED_HispanicLatinoSpanish,
Income=WK2_IncomeCode,
HighestGrade=ED_highestgrade,
Education=ED_EducationCode,
Race_Black=ED_Black,
Race_White=ED_White,
Race_Asian=ED_Asian,
RaceEth=ED_RaceEthCode) %>%
mutate(Sex=case_match(Sex,1~"Male",2~"Female"),
Marital=case_match(Marital, 1 ~ "Married",
2 ~ "Separated",
3 ~ "Divorced",
4 ~ "Annulled",
5 ~ "Widowed",
6 ~ "Never been married"),
Marital_b=fct_collapse(Marital,Married = "Married",
"No longer married" = c("Separated", "Divorced", "Annulled", "Widowed"),
"Never been married" = "Never been married"),
Race = case_when(Race_Black==1 ~ "Black",
Race_White==1 ~ "White",
Race_Asian==1 ~ "Asian",
.default ="Other"),
Employment=case_match(Employment, 1 ~ "Employed",
2 ~ "Retired",
3 ~ "Homemaker",
4 ~ "Student",
5 ~ "Unemployed, disabled, or other"),
RaceEth = case_match(RaceEth, 1 ~ "Hispanic",
2 ~ "Non-Hispanic white",
3 ~ "Non-Hispanic Black",
4 ~ "Non-Hispanic other"),
Hispanic = case_match(Hispanic, 1 ~ "Hispanic",
0 ~ "Non-Hispanic")
)
base_social_demo_data <- demo_data %>% full_join(base_data,by="PID")
save(base_social_demo_data,
file=paste0(output.data.f.path,"/AURORA_Base_SocialDemo_Data.RData"))
library(tidyverse)        # Data management
proj.f.path <- "/Users/xman/Library/CloudStorage/OneDrive-UniversityofNorthCarolinaatChapelHill/AURORA/Data/Survey/"
output.data.f.path <- paste(proj.f.path,"/OutputData",sep="")
aurora.survey.frz4c.path <- "/Users/xman/Library/CloudStorage/OneDrive-UniversityofNorthCarolinaatChapelHill/AURORA/Data/Survey/Freeze_4C/ToBeReleased"
aurora.survey.path <- "/Users/xman/Library/CloudStorage/OneDrive-UniversityofNorthCarolinaatChapelHill/AURORA/Data/Survey/"
load(file=paste0(aurora.survey.frz4c.path,"/frz4c.RData"))
load(file=paste0(aurora.survey.path,"/surveyCleanNonFormat.RData"))
load(file=paste0(aurora.survey.path,"/surveyCleanFormat.RData"))
############# Base
base_var <- c("SiteID","ED1_Event_BroadClass")
event_var <- c("ED_ChanceofDying", "ED_SpeedLimit")
#
recover_var <- c("ED_RecoverEmotionally","ED_RecoverEmotUnits","ED_RecoverPhysically",
"ED_RecoverPhysUnits")
tb_var <- c("ED_TB_Amnesia","ED_TB_HitHead","ED_TB_HowLngSleepyConf",
"ED_TB_HowLongKnockedOut","ED_TB_HowMuchDontRecall",
"ED_TB_KnockedOut","ED_TB_SleepyConfused")
# base_data_t<- allSurveyData %>%
#   select(PID,all_of(base_var),all_of(event_var),all_of(recover_var),all_of(tb_var))
# expected recovery was excluded because the unit are different for different participant
base_data_t<- allSurveyData %>%
select(PID,all_of(base_var),all_of(event_var),all_of(tb_var))
injury_data<- data_frz4c  %>%
select(PID,ISS,ISS_Cat,ED_IC_Injury,ED_VehicleDamage_cat,
ED_IC_Injury,ED_HtHdChgMS,MAIS,)
base_data <- base_data_t %>%
full_join(injury_data,by="PID") %>%
mutate(ED_SpeedLimit=as.numeric(ED_SpeedLimit)) %>%
mutate(ED_SpeedLimit=case_when(ED_SpeedLimit<0 ~ NA))
#base_data[base_data %in% c("-8","Presented, not answered","REFUSED","DON'T KNOW")] <- NA
base_data[base_data=="-8"|base_data=="Presented, not answered"|base_data=="REFUSED"|base_data=="DON'T KNOW"] <- NA
#base_data[base_data=="-8"] <- NA
base_data <- base_data %>%
# mutate(ED_TB_Amnesia = case_match(ED_TB_Amnesia,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                   "Yes" ~ "Yes",
#                                   "No" ~ "No")) %>%
# mutate(ED_TB_HitHead = case_match(ED_TB_HitHead,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                   "Yes" ~ "Yes",
#                                   "No" ~ "No")) %>%
# mutate(ED_TB_HowLngSleepyConf = case_match(ED_TB_HowLngSleepyConf,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                            "Just a few seconds" ~ "Just a few seconds",
#                                            "Less than a minute" ~ "Less than a minute",
#                                            "One minute or more" ~ "One minute or more")) %>%
# mutate(ED_TB_HowLongKnockedOut = case_match(ED_TB_HowLongKnockedOut,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                             "Just a few seconds" ~ "Just a few seconds",
#                                             "Less than a minute" ~ "Less than a minute",
#                                             "One minute or more" ~ "One minute or more")) %>%
# mutate(ED_TB_HowMuchDontRecall = case_match(ED_TB_HowMuchDontRecall,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                             "Just a few seconds" ~ "Just a few seconds",
#                                             "Less than a minute" ~ "Less than a minute",
#                                             "One minute or more" ~ "One minute or more")) %>%
# mutate(ED_TB_KnockedOut = case_match(ED_TB_KnockedOut,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                      "Yes" ~ "Yes",
#                                      "No" ~ "No")) %>%
# mutate(ED_TB_SleepyConfused = case_match(ED_TB_SleepyConfused,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                          "Yes" ~ "Yes",
#                                          "No" ~ "No")) %>%
mutate(ISS_Cat = as.factor(ISS_Cat),
ED_IC_Injury = case_match(ED_IC_Injury, 1 ~ "Yes",
0 ~ "No"),
ED_VehicleDamage_cat = as.factor(ED_VehicleDamage_cat),
ED_HtHdChgMS = as.factor(ED_HtHdChgMS),)
##### social demo
demo_var <- c("ED_Age","ED_GenderBirthCert","ED_highestgrade","ED_RaceEthCode","ED_Black","ED_White",
"ED_HISPANICLATINOSPANISHF","ED_Marital","WK2_EmploymentCode","WK2_IncomeCode")
temp_data <- data_frz4c %>%
select(PID,ED_Age,ED_GenderBirthCert,BMI,ADI_NatRank,ADI_StateRank,
ED_highestgrade,ED_RaceEthCode,ED_Marital,WK2_EmploymentCode)
temp2_data<- survey.data.clean.nonformat %>%
select(PID,ED_Black,ED_White,ED_Asian,ED_HispanicLatinoSpanish,WK2_IncomeCode,ED_EducationCode)
demo_data_raw <- temp_data %>% full_join(temp2_data,by="PID")
demo_data <- demo_data_raw %>%
rename(Age=ED_Age,Sex=ED_GenderBirthCert,
Employment=WK2_EmploymentCode,
Marital=ED_Marital,
Hispanic=ED_HispanicLatinoSpanish,
Income=WK2_IncomeCode,
HighestGrade=ED_highestgrade,
Education=ED_EducationCode,
Race_Black=ED_Black,
Race_White=ED_White,
Race_Asian=ED_Asian,
RaceEth=ED_RaceEthCode) %>%
mutate(Sex=case_match(Sex,1~"Male",2~"Female"),
Marital=case_match(Marital, 1 ~ "Married",
2 ~ "Separated",
3 ~ "Divorced",
4 ~ "Annulled",
5 ~ "Widowed",
6 ~ "Never been married"),
Marital_b=fct_collapse(Marital,Married = "Married",
"No longer married" = c("Separated", "Divorced", "Annulled", "Widowed"),
"Never been married" = "Never been married"),
Race = case_when(Race_Black==1 ~ "Black",
Race_White==1 ~ "White",
Race_Asian==1 ~ "Asian",
.default ="Other"),
Employment=case_match(Employment, 1 ~ "Employed",
2 ~ "Retired",
3 ~ "Homemaker",
4 ~ "Student",
5 ~ "Unemployed, disabled, or other"),
RaceEth = case_match(RaceEth, 1 ~ "Hispanic",
2 ~ "Non-Hispanic white",
3 ~ "Non-Hispanic Black",
4 ~ "Non-Hispanic other"),
Hispanic = case_match(Hispanic, 1 ~ "Hispanic",
0 ~ "Non-Hispanic")
)
base_social_demo_data <- demo_data %>% full_join(base_data,by="PID")
save(base_social_demo_data,
file=paste0(output.data.f.path,"/AURORA_Base_SocialDemo_Data.RData"))
?droplevels.data.frame
droplevels.data.frame(base_data)
library(tidyverse)        # Data management
proj.f.path <- "/Users/xman/Library/CloudStorage/OneDrive-UniversityofNorthCarolinaatChapelHill/AURORA/Data/Survey/"
output.data.f.path <- paste(proj.f.path,"/OutputData",sep="")
aurora.survey.frz4c.path <- "/Users/xman/Library/CloudStorage/OneDrive-UniversityofNorthCarolinaatChapelHill/AURORA/Data/Survey/Freeze_4C/ToBeReleased"
aurora.survey.path <- "/Users/xman/Library/CloudStorage/OneDrive-UniversityofNorthCarolinaatChapelHill/AURORA/Data/Survey/"
load(file=paste0(aurora.survey.frz4c.path,"/frz4c.RData"))
load(file=paste0(aurora.survey.path,"/surveyCleanNonFormat.RData"))
load(file=paste0(aurora.survey.path,"/surveyCleanFormat.RData"))
############# Base
base_var <- c("SiteID","ED1_Event_BroadClass")
event_var <- c("ED_ChanceofDying", "ED_SpeedLimit")
#
recover_var <- c("ED_RecoverEmotionally","ED_RecoverEmotUnits","ED_RecoverPhysically",
"ED_RecoverPhysUnits")
tb_var <- c("ED_TB_Amnesia","ED_TB_HitHead","ED_TB_HowLngSleepyConf",
"ED_TB_HowLongKnockedOut","ED_TB_HowMuchDontRecall",
"ED_TB_KnockedOut","ED_TB_SleepyConfused")
# base_data_t<- allSurveyData %>%
#   select(PID,all_of(base_var),all_of(event_var),all_of(recover_var),all_of(tb_var))
# expected recovery was excluded because the unit are different for different participant
base_data_t<- allSurveyData %>%
select(PID,all_of(base_var),all_of(event_var),all_of(tb_var))
injury_data<- data_frz4c  %>%
select(PID,ISS,ISS_Cat,ED_IC_Injury,ED_VehicleDamage_cat,
ED_IC_Injury,ED_HtHdChgMS,MAIS,)
base_data <- base_data_t %>%
full_join(injury_data,by="PID") %>%
mutate(ED_SpeedLimit=as.numeric(ED_SpeedLimit)) %>%
mutate(ED_SpeedLimit=case_when(ED_SpeedLimit<0 ~ NA))
#base_data[base_data %in% c("-8","Presented, not answered","REFUSED","DON'T KNOW")] <- NA
base_data[base_data=="-8"|base_data=="-7"|base_data=="Presented, not answered"|base_data=="REFUSED"|base_data=="DON'T KNOW"] <- NA
base_data <- droplevels(base_data)
#base_data[base_data=="-8"] <- NA
base_data <- base_data %>%
# mutate(ED_TB_Amnesia = case_match(ED_TB_Amnesia,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                   "Yes" ~ "Yes",
#                                   "No" ~ "No")) %>%
# mutate(ED_TB_HitHead = case_match(ED_TB_HitHead,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                   "Yes" ~ "Yes",
#                                   "No" ~ "No")) %>%
# mutate(ED_TB_HowLngSleepyConf = case_match(ED_TB_HowLngSleepyConf,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                            "Just a few seconds" ~ "Just a few seconds",
#                                            "Less than a minute" ~ "Less than a minute",
#                                            "One minute or more" ~ "One minute or more")) %>%
# mutate(ED_TB_HowLongKnockedOut = case_match(ED_TB_HowLongKnockedOut,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                             "Just a few seconds" ~ "Just a few seconds",
#                                             "Less than a minute" ~ "Less than a minute",
#                                             "One minute or more" ~ "One minute or more")) %>%
# mutate(ED_TB_HowMuchDontRecall = case_match(ED_TB_HowMuchDontRecall,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                             "Just a few seconds" ~ "Just a few seconds",
#                                             "Less than a minute" ~ "Less than a minute",
#                                             "One minute or more" ~ "One minute or more")) %>%
# mutate(ED_TB_KnockedOut = case_match(ED_TB_KnockedOut,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                      "Yes" ~ "Yes",
#                                      "No" ~ "No")) %>%
# mutate(ED_TB_SleepyConfused = case_match(ED_TB_SleepyConfused,c("-8","Presented, not answered","REFUSED","DON'T KNOW") ~ NA,
#                                          "Yes" ~ "Yes",
#                                          "No" ~ "No")) %>%
mutate(ISS_Cat = as.factor(ISS_Cat),
ED_IC_Injury = case_match(ED_IC_Injury, 1 ~ "Yes",
0 ~ "No"),
ED_VehicleDamage_cat = as.factor(ED_VehicleDamage_cat),
ED_HtHdChgMS = as.factor(ED_HtHdChgMS),)
##### social demo
demo_var <- c("ED_Age","ED_GenderBirthCert","ED_highestgrade","ED_RaceEthCode","ED_Black","ED_White",
"ED_HISPANICLATINOSPANISHF","ED_Marital","WK2_EmploymentCode","WK2_IncomeCode")
temp_data <- data_frz4c %>%
select(PID,ED_Age,ED_GenderBirthCert,BMI,ADI_NatRank,ADI_StateRank,
ED_highestgrade,ED_RaceEthCode,ED_Marital,WK2_EmploymentCode)
temp2_data<- survey.data.clean.nonformat %>%
select(PID,ED_Black,ED_White,ED_Asian,ED_HispanicLatinoSpanish,WK2_IncomeCode,ED_EducationCode)
demo_data_raw <- temp_data %>% full_join(temp2_data,by="PID")
demo_data <- demo_data_raw %>%
rename(Age=ED_Age,Sex=ED_GenderBirthCert,
Employment=WK2_EmploymentCode,
Marital=ED_Marital,
Hispanic=ED_HispanicLatinoSpanish,
Income=WK2_IncomeCode,
HighestGrade=ED_highestgrade,
Education=ED_EducationCode,
Race_Black=ED_Black,
Race_White=ED_White,
Race_Asian=ED_Asian,
RaceEth=ED_RaceEthCode) %>%
mutate(Sex=case_match(Sex,1~"Male",2~"Female"),
Marital=case_match(Marital, 1 ~ "Married",
2 ~ "Separated",
3 ~ "Divorced",
4 ~ "Annulled",
5 ~ "Widowed",
6 ~ "Never been married"),
Marital_b=fct_collapse(Marital,Married = "Married",
"No longer married" = c("Separated", "Divorced", "Annulled", "Widowed"),
"Never been married" = "Never been married"),
Race = case_when(Race_Black==1 ~ "Black",
Race_White==1 ~ "White",
Race_Asian==1 ~ "Asian",
.default ="Other"),
Employment=case_match(Employment, 1 ~ "Employed",
2 ~ "Retired",
3 ~ "Homemaker",
4 ~ "Student",
5 ~ "Unemployed, disabled, or other"),
RaceEth = case_match(RaceEth, 1 ~ "Hispanic",
2 ~ "Non-Hispanic white",
3 ~ "Non-Hispanic Black",
4 ~ "Non-Hispanic other"),
Hispanic = case_match(Hispanic, 1 ~ "Hispanic",
0 ~ "Non-Hispanic")
)
base_social_demo_data <- demo_data %>% full_join(base_data,by="PID")
save(base_social_demo_data,
file=paste0(output.data.f.path,"/AURORA_Base_SocialDemo_Data.RData"))
?fct_drop
col1 <- c("1", "2", "3")
col2 <- c(3, 2, 2)
df <- data.frame(col1, col2)
df_recoded<-df %>%
mutate(across(.cols = everything(), ~case_when(
. == 1 ~ 'Normal',
. == 2 ~ 'Altered',
. == 3 ~ NA_character_)))
df_recoded
# Set up paths
proj.f.path <- "/Users/xman/Library/CloudStorage/OneDrive-UniversityofNorthCarolinaatChapelHill/AnestheiologyProjects/DavidFlynn/Program"
data.f.path <- paste(proj.f.path,"/Data",sep="")
# Load in data
data.path <- paste(data.f.path,"/VExUS_raw_data_4Nov22.xlsx",sep="")
data.path
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(knitr)
library(tidyverse)        # Data management
library(ggplot2)          # Graphs
library(readr)            # Read or write .csv files
library(kableExtra)       # For narrow and short tables
library(htmlTable)
library(table1)
library(rio)
library(readxl)
library(irr)
library(DescTools)
library(psych)
# missing pattern
library(UpSetR)
library(naniar)
library(mice)
# Set up paths
proj.f.path <- "/Users/xman/Library/CloudStorage/OneDrive-UniversityofNorthCarolinaatChapelHill/AnestheiologyProjects/DavidFlynn"
data.f.path <- paste(proj.f.path,"/Data",sep="")
# data manipulation
data.ori$`Post-op SCr?`<- as.numeric(data.ori$`Post-op SCr?`)
# data manipulation
data.ori$`Post-op SCr?`<- as.numeric(data.ori$`Post-op SCr?`)
# Load in data
data.path <- paste(data.f.path,"/VExUS_raw_data_4Nov22.xlsx",sep="")
data.ori <- read_excel(data.path,na="N/A")
col.names <- names(data.ori)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(knitr)
library(tidyverse)        # Data management
library(ggplot2)          # Graphs
library(readr)            # Read or write .csv files
library(kableExtra)       # For narrow and short tables
library(htmlTable)
library(table1)
library(rio)
library(readxl)
library(irr)
library(DescTools)
library(psych)
# missing pattern
library(UpSetR)
library(naniar)
library(mice)
# Set up paths
proj.f.path <- "/Users/xman/Library/CloudStorage/OneDrive-UniversityofNorthCarolinaatChapelHill/AnestheiologyProjects/DavidFlynn"
data.f.path <- paste(proj.f.path,"/Data",sep="")
# Load in data
data.path <- paste(data.f.path,"/VExUS_raw_data_4Nov22.xlsx",sep="")
data.ori <- read_excel(data.path,na="N/A")
col.names <- names(data.ori)
# data manipulation
data.ori$`Post-op SCr?`<- as.numeric(data.ori$`Post-op SCr?`)
data.ori$`Pre-op SCr? (up to year before)`<- as.numeric(data.ori$`Pre-op SCr? (up to year before)`)
data.ori$`Post-OP fluid administration (mL)?`<- as.numeric(data.ori$`Post-OP fluid administration (mL)?`)
data.ori$Src_increase = data.ori$`Post-op SCr?` - data.ori$`Pre-op SCr? (up to year before)`
data.des<-data.ori %>% select(Age,Sex,Race,BMI,"ASA Score?",Src_increase,"actual LOS (days)","NSQIP any complication risk?","AKI? (SCr >0.3mg/dl within 48hr or >/=50% within 7 days OR urine output less than 0.5mL/kg/hr for >6hr)","Net I and O at 24 hours","Post-OP fluid administration (mL)?","Operative Time (min)?")
data.des$ave_intraop_fluids = data.ori$"Volume of Crystalloid (mL)?" + data.ori$"Volume of Colloid (mL)?" + data.ori$"Volume of Blood (mL)?"
names(data.des) <- c("Age","Sex","Race","BMI","ASA","Src_increase","LOS_days","NSQIP","AKI","Net_IO_24h","Post_OP_fluid","operative_time","ave_intraop_fluids")
data.complication <- data.ori %>% select("Return to OR?" ,"AKI? (SCr >0.3mg/dl within 48hr or >/=50% within 7 days OR urine output less than 0.5mL/kg/hr for >6hr)","Surgical infection?","Wound disruption?","Unplanned intubation?","VTE?","Stroke?","MI?","episode of cardiac arrest?","ventilator dependence >48hr?","Post Op Hemorrhage?","Sepsis?","Respiratory Failure?","Other Organ dysfunction?","Readmission?")
data.comp<-apply(data.complication,2, function(x) ifelse(x=="Yes",1,0))
data.comp <- as.data.frame(data.comp)
names(data.comp) <- names(data.complication)
data.comp$sum<-rowSums (x=data.comp, na.rm = FALSE)
data.comp$complication <- ifelse(data.comp$sum>0,1,0)
data.des$any_complication <- as.factor(data.comp$complication)
table1(~Age + Sex + Race + BMI + ASA + Src_increase + LOS_days + NSQIP + AKI + Net_IO_24h + Post_OP_fluid + ave_intraop_fluids + operative_time + any_complication, data=data.des,render.continuous=c(.="Mean (SD)", .="Median [Q1, Q3]"))
data.test<-data.ori %>% select("VExUS Score...23","VExUS Score...32","VExUS Score...41")
data.test <- data.test %>% rename(VExUS_pre="VExUS Score...23",VExUS_6h="VExUS Score...32",VExUS_24h="VExUS Score...41")
# names(data.test) <- c("VExUS_pre","VExUS_6h","VExUS_24h")
data.test <- data.test %>% mutate(VExUS_pre=recode(VExUS_pre,"Grade 0 (IVC<2cm)"=0,
"Grade 1 (IVC>2cm + any combo of normal or abnormal)"=1,
"Grade 2 (IVC>2cm + one severe)"=2))
data.test <- data.test %>% mutate(VExUS_6h=recode(VExUS_6h,"Grade 0 (IVC<2cm)"=0,
"Grade 1 (IVC>2cm + any combo of normal or abnormal)"=1,
"Grade 2 (IVC>2cm + one severe)"=2))
data.test <- data.test %>% mutate(VExUS_24h=recode(VExUS_24h,"Grade 0 (IVC<2cm)"=0,
"Grade 1 (IVC>2cm + any combo of normal or abnormal)"=1,
"Grade 2 (IVC>2cm + one severe)"=2))
#data.test$VExUS_pre <- as.factor(data.test$VExUS_pre)
#data.test$VExUS_6h <- as.factor(data.test$VExUS_6h)
#data.test$VExUS_24h <- as.factor(data.test$VExUS_24h)
data.test$any_complication <- as.factor(data.des$any_complication)
levels(data.test$any_complication) <- c("No","Yes")
data.test$AKI <- data.des$AKI
data.test$Age <- data.des$Age
data.test$Sex <- data.des$Sex
data.test$Race <- data.des$Race
data.test$ASA <- data.des$ASA
data.test$LOS_days <- data.des$LOS_days
pvalue <- function(x, ...) {
# Construct vectors of data y, and groups (strata) g
y <- unlist(x)
g <- factor(rep(1:length(x), times=sapply(x, length)))
if (is.numeric(y)) {
if(length(unique(y)>4)){
# For numeric variables, perform a standard anova test
tt <- aov(y~g)
p <- summary(tt)[[1]][[1,"Pr(>F)"]]
}else{
tt <- kruskal.test(y ~ g)
p <- tt$p.value
}
} else {
# For categorical variables, perform a chi-squared test of independence
p <- chisq.test(table(y, g))$p.value
}
# Format the p-value, using an HTML entity for the less-than sign.
# The initial empty string places the output on the line below the variable label.
c("", sub("<", "&lt;", format.pval(p, digits=3, eps=0.001)))
}
View(data.des)
View(data.test)
View(data.ori)
data.test<-data.ori %>% select("VExUS Score...23","VExUS Score...32","VExUS Score...41")
data.test <- data.test %>% rename(VExUS_pre="VExUS Score...23",VExUS_6h="VExUS Score...32",VExUS_24h="VExUS Score...41")
View(data.test)
names(data.ori)
